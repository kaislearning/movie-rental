{"message":"Something failed during startup.","stack":"Error: Something failed during startup.\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:29:7)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:32:44.656Z"}
{"message":"Something failed miserably!","stack":"Error: Something failed miserably!\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:34:26)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:53:50.001Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:42.521Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:43.301Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:52.096Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:53.806Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:34:26.743Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:39:24.124Z"}
{"message":"Listening on port 3000...","level":"info"}
{"message":"Connected to mongodb://localhost/vidly...","level":"info"}
{"message":"Listening on port 3000...","level":"info"}
{"message":"Connected to mongodb://localhost/vidly...","level":"info"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-13T12:07:14.209Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-13T12:09:00.538Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-12-13T12:09:01.583Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-13T12:15:27.953Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-12-13T12:15:28.978Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-13T12:16:39.866Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-13T12:16:40.892Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-13T12:49:14.532Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-13T12:49:15.559Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:34:30.543Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:34:31.659Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:36:15.895Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:36:16.927Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:36:33.944Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:36:34.976Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:49:11.738Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:49:12.771Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:50:44.737Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:50:45.770Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:51:03.313Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:51:04.343Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:52:41.223Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:52:42.257Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:53:38.030Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:53:39.066Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T06:53:40.138Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:56:52.352Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:56:53.386Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T06:56:54.450Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T06:58:07.385Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T06:58:08.416Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T06:58:09.490Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T07:10:10.686Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T07:10:11.721Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T07:10:12.788Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T07:10:18.984Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T07:10:20.016Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T07:10:21.081Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T07:11:20.535Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T07:11:21.566Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schema\\objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:1041:15)\n    at cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\query.js:1485:8)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:276:8\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\kareem\\index.js:23:7\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-12-14T07:11:22.631Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T07:11:28.257Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T07:11:29.287Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T08:08:04.675Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T08:08:05.707Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T11:36:08.534Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T11:36:09.625Z"}
{"message":"Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).","errors":{"name":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"1234"},"kind":"minlength","path":"name","value":"1234","$isValidatorError":true}},"_message":"Genre validation failed","stack":"ValidationError: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).\n    at new ValidationError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Object.<anonymous>.Document.invalidate (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at runCallback (timers.js:705:18)\n    at tryOnImmediate (timers.js:676:5)\n    at processImmediate (timers.js:658:5)","name":"ValidationError","level":"error","timestamp":"2018-12-14T11:36:11.123Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T11:37:38.402Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T11:37:39.434Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T11:38:33.024Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T11:38:34.057Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T11:40:38.101Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T11:40:39.135Z"}
{"message":"Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","errors":{"name":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","$isValidatorError":true}},"_message":"Genre validation failed","stack":"ValidationError: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at new ValidationError (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Object.<anonymous>.Document.invalidate (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (F:\\node\\13- Integration Testing\\before\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at runCallback (timers.js:705:18)\n    at tryOnImmediate (timers.js:676:5)\n    at processImmediate (timers.js:658:5)","name":"ValidationError","level":"error","timestamp":"2018-12-14T11:40:40.253Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T11:41:20.811Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T11:41:21.846Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T12:42:16.477Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T12:42:17.527Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T12:42:48.836Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T12:42:49.870Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T12:47:25.380Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T12:47:26.412Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T12:55:55.478Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T12:55:56.525Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:02:28.489Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:02:29.525Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:05:14.224Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:05:15.258Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:07:24.692Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:07:25.727Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:13:09.467Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:13:10.500Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:19:17.506Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:19:18.539Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:19:35.422Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:19:36.132Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:19:36.453Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:19:37.195Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:20:26.223Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:20:26.873Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:20:27.253Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:20:27.933Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:29:52.543Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:29:53.105Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:29:53.597Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:29:54.164Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:30:04.783Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:30:05.378Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:30:05.814Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:30:06.449Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:31:27.120Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:31:27.710Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:31:28.150Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:31:28.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:32:50.573Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:32:51.188Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:32:51.603Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:32:52.247Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:33:39.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:33:39.787Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:33:40.243Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:33:40.857Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:34:23.701Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:34:24.217Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:34:24.733Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:34:25.277Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:40:11.025Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:40:11.051Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:40:12.056Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:40:12.115Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:40:37.726Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:41:40.328Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:41:41.032Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:41:41.360Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:41:42.091Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:42:05.844Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:42:06.424Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:42:06.876Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:42:07.512Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:43:01.349Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:43:01.360Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:43:02.380Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:43:02.426Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:43:13.520Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:43:26.845Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:43:26.911Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:43:27.882Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:43:27.974Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:45:07.723Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:45:08.307Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:45:08.755Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:45:09.336Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:45:15.162Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:45:25.634Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:45:25.674Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:45:26.660Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:45:26.719Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:58:30.931Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:58:31.601Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:58:31.964Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:58:32.638Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:59:22.148Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:59:22.759Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:59:23.178Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:59:23.800Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:59:38.036Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T13:59:38.037Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:59:39.065Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T13:59:39.106Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:00:24.075Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:00:24.736Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:00:25.106Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:00:25.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:00:39.544Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:00:39.531Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:00:40.556Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:00:40.593Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:04:31.422Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:04:32.448Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:04:53.369Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:04:54.405Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:57:21.590Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:57:22.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:58:21.219Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:58:22.244Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T14:59:18.856Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T14:59:19.884Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:03:36.060Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:03:37.088Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:04:42.936Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:04:43.962Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:07:04.852Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:07:04.932Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:07:05.879Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:07:05.965Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:15:52.724Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:15:53.255Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:15:53.753Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:15:54.287Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:16:30.652Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:16:31.250Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:16:31.679Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:16:32.283Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:29:49.557Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:29:49.651Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:29:50.584Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:29:50.682Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:35:27.715Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:35:27.823Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:35:28.744Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:35:28.876Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:35:42.692Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:35:42.782Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:35:43.720Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:35:43.815Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:36:07.171Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:36:07.228Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:36:08.199Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:36:08.275Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:37:59.086Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:38:00.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-14T15:38:19.500Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-12-14T15:38:20.533Z"}
